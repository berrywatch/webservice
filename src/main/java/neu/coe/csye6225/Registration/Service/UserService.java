package neu.coe.csye6225.Registration.Service;

import neu.coe.csye6225.Registration.Entity.User;
import neu.coe.csye6225.Registration.Entity.UserUpdate;
import neu.coe.csye6225.Registration.Repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import java.text.SimpleDateFormat;
import java.util.Date;

@Service
public class UserService {
    @Autowired // to get the bean which is auto-generated by Spring
    private UserRepository userRepository;


    public UserService(){
        System.out.println("Service is created.");
    }

    public User create(User user){
        if(userRepository.findById(user.getUsername()).isPresent()){
            return null;
        }
        String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
        user.setAccount_created(timeStamp);
        user.setAccount_updated(timeStamp);
        user.setPassword(new BCryptPasswordEncoder().encode(user.getPassword()));
        userRepository.save(user);
        return userRepository.findById(user.getUsername()).get();
    }

    public boolean update(UserUpdate uu){
        // check for fields
        if(uu.getAccount_created()!=null || uu.getAccount_updated()!=null || uu.getPassword()==null){
            return false;
        }
        if(!userRepository.findById(uu.getUsername()).isPresent()){
            return false;
        }
        // check password
        String old_pwd = userRepository.findById(uu.getUsername()).get().getPassword();
        BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();
        if(!encoder.matches(uu.getPassword(), old_pwd)){
            return false;
        }
        // update values. account_created is not updatable due to Entity settings
        User u = userRepository.findById(uu.getUsername()).get();
        if(uu.getFirst_name()!=null)
            u.setFirst_name(uu.getFirst_name());
        if(uu.getLast_name()!=null)
            u.setLast_name(uu.getLast_name());
        if(uu.getNew_password()!=null)
            u.setPassword(encoder.encode(uu.getNew_password()));
        u.setAccount_updated(new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date()));
        userRepository.save(u);
        return true;
    }

//    public User get(){
//
//    }
}
